type UserDTO = record {};
type UpdateUserDTO = 
 record {
   displayName: text;
   profilePicture: blob;
   profilePictureExtension: text;
   username: text;
 };
type Result_2 = 
 variant {
   err: Error;
   ok;
 };
type Result_1 = 
 variant {
   err: Error;
   ok: UserDTO;
 };
type Result = 
 variant {
   err: Error;
   ok: UpdateUserDTO;
 };
type Error = 
 variant {
   AlreadyExists;
   DecodeError;
   InvalidData;
   NotAllowed;
   NotAuthorized;
   NotEnoughFunds;
   NotFound;
   PaymentError;
 };
type CreateUserDTO = 
 record {
   displayName: text;
   profilePicture: blob;
   profilePictureExtension: text;
   username: text;
 };
service : {
  createAgent: (CreateUserDTO) -> (Result_2);
  getAgent: () -> (Result_1) query;
  updateAgent: (UpdateUserDTO) -> (Result);
}
